syntax = "proto3";

// QueryDenomTraceRequest is the request type for the Query/DenomTrace RPC
// method
message QueryDenomTraceRequest {
  // hash (in hex format) of the denomination trace information.
  string hash = 1;
}

// DenomTrace contains the base denomination for ICS20 fungible tokens and the
// source tracing information path.
message DenomTrace {
  // path defines the chain of port/channel identifiers used for tracing the
  // source of the fungible token.
  string path = 1;
  // base denomination of the relayed fungible token.
  string base_denom = 2;
}

// QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC
// method.
message QueryDenomTraceResponse {
  // denom_trace returns the requested denomination trace information.
  DenomTrace denom_trace = 1;
}

// QueryDenomMetadataRequest is the request type for the Query/DenomMetadata RPC method.
message QueryDenomMetadataRequest {
  // denom is the coin denom to query the metadata for.
  string denom = 1;
}

// QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
// method.
message QueryDenomMetadataResponse {
  // metadata describes and provides all the client information for the requested token.
  Metadata metadata = 1;
}

// DenomUnit represents a struct that describes a given
// denomination unit of the basic token.
message DenomUnit {
  // denom represents the string name of the given denom unit (e.g uatom).
  string denom = 1;
  // exponent represents power of 10 exponent that one must
  // raise the base_denom to in order to equal the given DenomUnit's denom
  // 1 denom = 10^exponent base_denom
  // (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
  // exponent = 6, thus: 1 atom = 10^6 uatom).
  uint32 exponent = 2;
  // aliases is a list of string aliases for the given denom
  repeated string aliases = 3;
}

// Metadata represents a struct that describes
// a basic token.
message Metadata {
  string description = 1;
  // denom_units represents the list of DenomUnit's for a given coin
  repeated DenomUnit denom_units = 2;
  // base represents the base denom (should be the DenomUnit with exponent = 0).
  string base = 3;
  // display indicates the suggested denom that should be
  // displayed in clients.
  string display = 4;
  // name defines the name of the token (eg: Cosmos Atom)
  //
  // Since: cosmos-sdk 0.43
  string name = 5;
  // symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
  // be the same as the display.
  //
  // Since: cosmos-sdk 0.43
  string symbol = 6;
  // URI to a document (on or off-chain) that contains additional information. Optional.
  //
  // Since: cosmos-sdk 0.46
  string uri = 7;
  // URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
  // the document didn't change. Optional.
  //
  // Since: cosmos-sdk 0.46
  string uri_hash = 8;
}